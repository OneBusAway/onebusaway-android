language: android
dist: trusty
jdk:
  - oraclejdk8

env:
  global:
    - ADB_INSTALL_TIMEOUT=8
    - BUILD_TOOLS=28.0.3
    - COMPILE_SDK_VERSION=29
    - ABI=x86_64
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
  matrix:
    # - API=15 # ERROR: only runs locally. Create+Start once from AndroidStudio to init sdcard. Then only from command-line w/-engine classic
    # - API=16 ABI=armeabi-v7a AUDIO=-no-audio # ERROR: Fails with "com.android.builder.testing.ConnectedDevice > No tests found."
    # - API=17 ABI=armeabi-v7a # Emulator runs, but GradientTest.testInterpolateColor[test(AVD) - 7.1.1] fails with java.lang.AssertionError: expected:<-65434> but was:<-65433>
    # - API=18 ABI=armeabi-v7a # Emulator runs, but GradientTest.testInterpolateColor[test(AVD) - 7.1.1] fails with java.lang.AssertionError: expected:<-65434> but was:<-65433>
    # - API=19 ABI=armeabi-v7a # ERROR: This AVD's configuration is missing a kernel file! Please ensure the file "kernel-ranchu" is in the same location as your system image.
    # API 20 was Android Wear only
    # - API=21 # testSetOccupancyVisibilityAndColor fails with NoSuchMethodError: No virtual method getColor()
    # - API=22 # testSetOccupancyVisibilityAndColor fails with NoSuchMethodError: No virtual method getColor()
    # - API=23 # testSetOccupancyVisibilityAndColor fails with NoSuchMethodError: No virtual method getColor()
    # - API=24 # Works
    # - API=25 # Works
    # - API=26 ABI=x86_64 # Works
    # - API=27 ABI=x86_64 # Works
    - API=28 ABI=x86_64 # Works
    # - API=29 # ERROR: Emulator startup stalls, ends with "emulator: got message from guest system fingerprint HAL"

android:
  components:
    # installing tools to start, then use `sdkmanager` below to get the rest
    - tools

licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'

install:
  - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning
  - echo y | sdkmanager "platform-tools" >/dev/null
  - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - echo y | sdkmanager "build-tools;$BUILD_TOOLS" >/dev/null # Implicit gradle dependency - gradle drives changes
  - echo y | sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
  - echo y | sdkmanager "platforms;android-$COMPILE_SDK_VERSION" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
  - echo y | sdkmanager --channel=4 "emulator" >/dev/null # Use canary channel to get emulator 29.x for x86_64 image support
  - echo y | sdkmanager "extras;android;m2repository" >/dev/null
  - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
  - emulator -verbose -avd test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
  - ./gradlew test check connectedObaGoogleDebugAndroidTest -x lint --stacktrace

before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

notifications:
  webhooks:
    # Integration with Gitter (https://gitter.im/OneBusAway/onebusaway-android)
    urls:
      - https://webhooks.gitter.im/e/a579a4e7a21ff6ee51a1
    on_success: change
    on_failure: always