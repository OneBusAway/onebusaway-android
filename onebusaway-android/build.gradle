/*
 * Copyright (C) 2013 University of South Florida (sjbarbeau@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import groovy.swing.SwingBuilder
import org.apache.tools.ant.filters.ConcatFilter

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
    }
}
apply plugin: 'com.android.application'

repositories {
    jcenter()
    maven {
        // OBA Releases - for comparator to sort alphanumeric routes
        url "http://nexus.onebusaway.org/service/local/repositories/releases"
    }
    maven {
        // for Amazon Maps
        url uri('../.m2/repository')
    }
    maven {
        // CUTR Releases
        url "https://github.com/CUTR-at-USF/cutr-mvn-repo/raw/master/snapshots"
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 76
        versionName "2.1.9"
    }

    /**
     * brand - how the name, look, and feel of each OneBusAway-based app is presented
     * platform - Google or Amazon (for Maps API v2 dependencies)
     */
    flavorDimensions "brand", "platform"

    productFlavors {
        google {
            // Normal Google Play release - see src/google
            dimension "platform"
        }

        amazon {
            /**
             * Amazon Fire Phone - see src/amazon
             *
             * NOTE: The "copyMapsApiV2Classes" task automatically copies the classes from
             * src/google/java/org/onebusaway/android/map package to the
             * src/amazon/java/org/onebusaway/android/map package (with the exception of
             * ProprietaryMapHelpV2) when the project is built, and replaces the imports and
             * GoogleMap class with the Amazon equivalents.  Therefore, the files in
             * src/amazon/java/org/onebusaway/android/map should not be manually changed.
             */
            dimension "platform"
        }

        oba {
            /**
             * Original OneBusAway brand
             *
             * To allow this app to be distributed via Google Play, the applicationId MUST remain the
             * original package name of the app before it was re-branded to OneBusAway:
             * com.joulespersecond.seattlebusbot
             */
            dimension "brand"
            applicationId "com.joulespersecond.seattlebusbot"
            manifestPlaceholders = [databaseAuthority: "com.joulespersecond.oba"]
            buildConfigField "int", "ARRIVAL_INFO_STYLE", "0" // Defined in BuildFlavorConstants
            buildConfigField "boolean", "USE_FIXED_REGION", "false" // Supports multi-region
            // Below fields need to be defined so flavor builds, but will not be used by app
            buildConfigField "String", "FIXED_REGION_NAME", "null"
            buildConfigField "String", "FIXED_REGION_OBA_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_SIRI_BASE_URL", "null"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LAT", "0"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LON", "0"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LAT_SPAN", "0"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LON_SPAN", "0"
            buildConfigField "String", "FIXED_REGION_LANG", "null"
            buildConfigField "String", "FIXED_REGION_CONTACT_EMAIL", "null"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_OBA_DISCOVERY_APIS", "true"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_OBA_REALTIME_APIS", "true"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_SIRI_REALTIME_APIS", "false"
            buildConfigField "String", "FIXED_REGION_TWITTER_URL", "null"
            buildConfigField "String", "FIXED_REGION_STOP_INFO_URL", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_JURISDICTION_ID", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_API_KEY", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_OTP_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_OTP_CONTACT_EMAIL", "null"
        }

        /**
         * Rebranded versions of OBA using brand build flavors are below.  To add a new brand:
         *  1. Add a new brand build flavor variant below
         *  2. Create a new folder src/{brandName}/res (or copy from one of the samples - src/agencyX or src/agencyY)
         *  3. Edit resource files in src/{brandName}/res subfolders with the brand information
         *
         *  For generating icons for the res/mipmap-* folders, see http://romannurik.github.io/AndroidAssetStudio/icons-launcher.html
         */

        agencyX {
            // "Agency X" rebranding OneBusAway as another app - see src/agencyX/res for branded resources
            dimension "brand"
            applicationId "org.agencyx.android" // Unique listing of this brand on app store
            manifestPlaceholders = [databaseAuthority: applicationId.toString() + '.provider']
            buildConfigField "int", "ARRIVAL_INFO_STYLE", "0"  // Defined in BuildFlavorConstants
            buildConfigField "boolean", "USE_FIXED_REGION", "false" // Supports multi-region
            // Below fields need to be defined so flavor builds, but will not be used by app
            buildConfigField "String", "FIXED_REGION_NAME", "null"
            buildConfigField "String", "FIXED_REGION_OBA_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_SIRI_BASE_URL", "null"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LAT", "0"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LON", "0"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LAT_SPAN", "0"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LON_SPAN", "0"
            buildConfigField "String", "FIXED_REGION_LANG", "null"
            buildConfigField "String", "FIXED_REGION_CONTACT_EMAIL", "null"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_OBA_DISCOVERY_APIS", "true"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_OBA_REALTIME_APIS", "true"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_SIRI_REALTIME_APIS", "false"
            buildConfigField "String", "FIXED_REGION_TWITTER_URL", "null"
            buildConfigField "String", "FIXED_REGION_STOP_INFO_URL", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_JURISDICTION_ID", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_API_KEY", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_OTP_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_OTP_CONTACT_EMAIL", "null"
        }

        agencyY {
            // "Agency Y" rebranding OneBusAway as another app - see src/agencyY/res for branded resources
            dimension "brand"
            applicationId "org.agencyy.android" // Unique listing of this brand on app store
            manifestPlaceholders = [databaseAuthority: applicationId.toString() + '.provider']
            buildConfigField "int", "ARRIVAL_INFO_STYLE", "1" // Defined in BuildFlavorConstants
            buildConfigField "boolean", "USE_FIXED_REGION", "true" // Does not support multi-region
            // Fixed region info that the app will use
            buildConfigField "String", "FIXED_REGION_NAME", "\"Agency Y\""
            buildConfigField "String", "FIXED_REGION_OBA_BASE_URL",
                    "\"http://api.tampa.onebusaway.org/api\""
            buildConfigField "String", "FIXED_REGION_SIRI_BASE_URL", "null"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LAT", "27.976910500000002"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LON", "-82.445851"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LAT_SPAN", "0.5424609999999994"
            buildConfigField "double", "FIXED_REGION_BOUNDS_LON_SPAN", "0.576357999999999"
            buildConfigField "String", "FIXED_REGION_LANG", "\"en_US\""
            buildConfigField "String", "FIXED_REGION_CONTACT_EMAIL", "\"onebusaway@gohart.org\""
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_OBA_DISCOVERY_APIS", "true"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_OBA_REALTIME_APIS", "true"
            buildConfigField "boolean", "FIXED_REGION_SUPPORTS_SIRI_REALTIME_APIS", "false"
            buildConfigField "String", "FIXED_REGION_TWITTER_URL",
                    "\"http://mobile.twitter.com/OBA_tampa\""
            buildConfigField "String", "FIXED_REGION_STOP_INFO_URL", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_JURISDICTION_ID", "null"
            buildConfigField "String", "FIXED_REGION_OPEN311_API_KEY", "\"937033cad3054ec58a1a8156dcdd6ad8a416af2f\""
            buildConfigField "String", "FIXED_REGION_OPEN311_BASE_URL", "\"http://test.seeclickfix.com/open311/v2/\""
            buildConfigField "String", "FIXED_REGION_OTP_BASE_URL", "null"
            buildConfigField "String", "FIXED_REGION_OTP_CONTACT_EMAIL", "null"
        }

        /**
         * Add more rebranding flavors here...
         */
    }

    /**
     * Set brand BuildConfig.DATABASE_AUTHORITY, used in org.onebusaway.android.provider.ObaContract
     */
    applicationVariants.all {
        variant ->
            def authority;
            if (variant.productFlavors.get(0).name == "oba") {
                authority = '"' + "com.joulespersecond.oba" + '"'
                // Must keep the original OBA authority
                variant.buildConfigField "String", "DATABASE_AUTHORITY", authority
            } else {
                // It's cleaner to just append ".provider" to the applicationId for brand flavors
                authority = '"' + applicationId.toString() + '.provider' + '"'
                variant.buildConfigField "String", "DATABASE_AUTHORITY", authority
            }
    }

    // http://stackoverflow.com/questions/20673625/gradle-0-7-0-duplicate-files-during-packaging-of-apk
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    if (project.hasProperty("secure.properties")
            && new File(project.property("secure.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("secure.properties"))))

        signingConfigs {
            debug {
                storeFile file("seattlebusbot3.debug.keystore")
            }

            release {
                storeFile file(props['key.store'])
                keyAlias props['key.alias']
                storePassword "askmelater"
                keyPassword "askmelater"
            }
        }
    } else {
        signingConfigs {
            debug {
                storeFile file("seattlebusbot3.debug.keystore")
            }

            release {
                // Nothing here
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
        // Append the version name to the end of aligned APKs
        android.applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.outputFile
                output.outputFile = new File(file.parent,
                        file.name.replace(".apk", "-v" + versionName + ".apk"))
            }
        }
    }
}

/**
 * Copies our Maps API v2-based classes from the Google build flavor to the Amazon build flavor,
 * replacing the Google import packages and GoogleMap class with the Amazon import packages and
 * AmazonMap class.  Copy is only executed if the files in the google build flavor are no longer
 * equal to the ones in the amazon build flavor.
 */
task copyMapsApiV2Classes {
    inputs.dir 'src/google/java/org/onebusaway/android/map/googlemapsv2'
    outputs.dir 'src/amazon/java/org/onebusaway/android/map/googlemapsv2'
    // up-to-date check for outputs
    doLast {
        copy {
            from 'src/google/java/org/onebusaway/android/map/googlemapsv2'
            into 'src/amazon/java/org/onebusaway/android/map/googlemapsv2'
            exclude { details -> details.file.name.equals('ProprietaryMapHelpV2.java') }
            filter { line -> line.replace('com.google.android.gms.maps', 'com.amazon.geo.mapsv2') }
            filter { line -> line.replace('GoogleMap', 'AmazonMap') }
            filter(ConcatFilter, prepend: file('AmazonMapsFileHeader.txt'))
        }
    }
}

preBuild.dependsOn copyMapsApiV2Classes

/**
 * Ask for keystore/key passwords on the command line or popup UI when running release builds
 */
task askForPasswords << {
    def console = System.console()
    def storePw
    def keyPw

    if (console) {
        // Must create String because System.readPassword() returns char[]
        // (and assigning that below fails silently)
        storePw = new String(console.readPassword("\nKeystore password: "))
        keyPw = new String(console.readPassword("Key password: "))
    } else {
        // Gradle is running as a daemon - prompt user to enter passwords via popup UI (#770)
        new SwingBuilder().edt {
            dialog(modal: true, title: 'Enter credentials', alwaysOnTop: true, resizable: true,
                    locationRelativeTo: null, pack: true, show: true
            ) {
                vbox {
                    label(text: "Keystore passphrase:")
                    textField id: "storeText", input = passwordField()
                    label(text: "Key passphrase:")
                    textField id: "keyText", input = passwordField()
                    button(defaultButton: true, text: 'OK', actionPerformed: {
                        storePw = storeText.text;
                        keyPw = keyText.text;
                        dispose();
                    })
                }
            }
        }
    }

    android.signingConfigs.release.storePassword = storePw
    android.signingConfigs.release.keyPassword = keyPw
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.matches("\\bpackage\\w+Release\\b")) {
        theTask.dependsOn "askForPasswords"
    }
}

dependencies {
    // Google Play Services Analytics (we need this on Amazon flavor too)
    compile('com.google.android.gms:play-services-analytics:9.4.0') {
        exclude module: 'play-services-ads' // See #342
    }
    // Google Play Services Location (we need this on Amazon flavor too)
    compile 'com.google.android.gms:play-services-location:9.4.0'
    // Support libraries
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'commons-io:commons-io:2.4'
    // Open311 client library
    compile 'edu.usf.cutr:open311client:1.0.9'
    // JSON data binding for OBA REST API responses
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.2'
    // Bottom sliding panel
    compile 'com.sothree.slidinguppanel:library:3.3.0'
    // For sorting alphanumeric route names
    compile 'org.onebusaway.util:comparators:1.0.0'
    // For tutorial (ShowcaseView) library
    compile 'com.github.amlcurran.showcaseview:library:5.4.3'
    // POJOs used for full data-binding via Jackson
    compile 'edu.usf.cutr.opentripplanner.android:opentripplanner-pojos:1.0.0-SNAPSHOT'
    // Google Play Services Maps (only for Google flavor)
    googleCompile 'com.google.android.gms:play-services-maps:9.4.0'
    // Google Play Services Places is required by ProprietaryMapHelpV2 (only for Google flavor)
    googleCompile 'com.google.android.gms:play-services-places:9.4.0'
    // Amazon Maps (only for Amazon flavor)
    amazonCompile 'com.amazon.android:amazon-maps-api:2.0'
}
